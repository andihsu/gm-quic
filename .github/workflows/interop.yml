name: QUIC Interop 

on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: '0 2 * * *'  # UTC 2:00 AM = Beijing 10:00 AM

jobs:
  interop-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      # use matrix to test all combinations of client and server in parallel
      matrix:
        client: [quic-go, ngtcp2, mvfst, quiche, kwik, picoquic, aioquic, neqo, nginx, msquic, chrome, xquic, lsquic, haproxy, quinn, s2n-quic, go-x-net, gm-quic]
        server: [quic-go, ngtcp2, mvfst, quiche, kwik, picoquic, aioquic, neqo, nginx, msquic, chrome, xquic, lsquic, haproxy, quinn, s2n-quic, go-x-net, gm-quic]

    steps:
    - uses: actions/checkout@v4

    - name: Build docker image
      run: docker build -t gm-quic:test -f interop/Dockerfile .

    - name: Install and config quic-interop-runner
      run: |
        git clone https://github.com/quic-interop/quic-interop-runner.git
        cd quic-interop-runner
        jq '. + {
          "gm-quic": {
            "image": "localhost/gm-quic:test",
            "url": "https://github.com/genmeta/gm-quic",
            "role": "both"
          }
        }' implementations.json > implementations.json
        pip3 install -r requirements.txt

    - name: Install dependencies
      run: |
        sudo modprobe ip6table_filter
        sudo add-apt-repository -y ppa:wireshark-dev/stable
        sudo apt install -y tshark

    - name: Run the interop tests
      run: |
        cd quic-interop-runner
        python3 run.py -d -c ${{ matrix.client }} -s ${{ matrix.server }} \
          -l -${{ matrix.client }}-${{ matrix.server }}-logs -j ${{ matrix.client }}-${{ matrix.server }}-logs/interop.json

    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.server }}-${{ matrix.client }}
        path: |
          quic-interop-runner/*logs/*
